module statemachine(x, q, a, b, c, d, e, f, g, ns);

    input x;
    input [2:0] q;
          
    output     a, 
               b,
               c,
               d,
               e,
               f,
               g;
               
    output reg [2:0] ns;
               
    
    parameter s0 = 3'b000, 
              s1 = 3'b001, 
              s2 = 3'b010, 
              s3 = 3'b011, 
              s4 = 3'b100, 
              s5 = 3'b101; 
             
    always @(q, x)
    begin
        case (q)
            s0: begin 
                if(x == 1'b0) 
                begin 
                     
                     ns <= s5;
                                 
                end
                else 
                begin
                    
                    ns <= s1;
                       
                end
            end
            
            s1: begin
                if(x == 1'b0) 
                begin 
                     
                     ns <= s0;
                      
                end
                else 
                begin
                     
                     ns <= s2;
                     
                 end            
            end
            
            s2: begin
                if(x == 1'b0) 
                begin 
                     
                     ns <= s1;
                  
                 end
                 else
                 begin
                     
                     ns <= s3;
                   
                 end
            end
         
            s3: begin
                if(x == 1'b0) 
                begin 
                     
                     ns <= s2;
                   
                end
                else
                begin
                    
                     ns <= s4;
                   
                end            
            end
      
            s4: begin
                if(x == 1'b0) 
                begin 
                     
                     ns <= s3;
                   
                end
                else
                begin
                    
                    ns <= s5;
                   
                end            
            end
            
            s5: begin
                if(x == 1'b0) 
                begin 
                    
                    ns <= s4;
                   
                end
                else 
                begin
                    
                    ns <= s0;
                   
                end            
            end
           default: ns <= 3'bxxx;
        endcase 
        
       end
       
       assign a = (q[2] & ~q[1] & ~q[0]) | (~q[2] & ~q[1] & q[0]);
       assign b = (q[2] & ~q[1] & q[0]);
       assign c = (~q[2] & q[1] & ~q[0]);
       assign d = (q[2] & ~q[1] & ~q[0]) | (~q[2] & ~q[1] & q[0]);
       assign e = (~q[2] & q[0]) | (q[2] & ~q[1]);
       assign f = (~q[2] & q[0]) | (~q[2] & q[1]);
       assign g = (~q[2] & ~q[1]);      
    
endmodule
